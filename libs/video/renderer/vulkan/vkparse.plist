{
	search = (
		VkAttachmentDescription,
		VkSubpassDescription,
		VkSubpassDependency,
		VkSpecializationInfo,
		VkPipelineShaderStageCreateInfo,
		qfv_swapchain_t,
	);
	parse = {
		qfv_swapchain_s = {
			.name = qfv_swapchain_t;
			format = auto;
		};
		VkSubpassDescription = {
			flags = auto;
			pipelineBindPoint = auto;
			inputAttachments = {
				type = (array, VkAttachmentReference);
				size = inputAttachmentCount;
				values = pInputAttachments;
			};
			colorAttachments = {
				type = (array, VkAttachmentReference);
				size = colorAttachmentCount;
				values = pColorAttachments;
			};
			resolveAttachments = {
				type = (array, VkAttachmentReference);
				values = pResolveAttachments;
				matchSize = colorAttachments;
			};
			depthStencilAttachment = {
				type = (single, VkAttachmentReference);
				value = pDepthStencilAttachment;
			};
			preserveAttachments = {
				type = (array, uint32_t);
				size = preserveAttachmentCount;
				values = pPreserveAttachments;
			};
		};
		VkSpecializationInfo = {
			mapEntries = {
				type = (array, VkSpecializationMapEntry);
				size = mapEntryCount;
				values = pMapEntries;
			};
			data = {
				type = data;
				size = dataSize;
				data = pData;
			};
		};
		VkPipelineShaderStageCreateInfo = {
			flags = auto;
			stage = auto;
			name = {
				type = string;
				string = pName;
			};
			module = {
				type = (custom, QFString, parse_VkShaderModule);
				fields = (module);
			};
			specializationInfo = {
				type = (single, VkSpecializationInfo);
				value = pSpecializationInfo;
			};
		};
		VkShaderModuleCreateInfo = skip;
	}
}
